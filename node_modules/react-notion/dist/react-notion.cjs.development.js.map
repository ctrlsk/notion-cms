{"version":3,"file":"react-notion.cjs.development.js","sources":["../src/components/asset.tsx","../src/components/code.tsx","../src/utils.ts","../src/components/page-icon.tsx","../src/components/page-header.tsx","../src/block.tsx","../src/renderer.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { BlockType, ContentValueType, MapImageUrl } from \"../types\";\n\nconst types = [\"video\", \"image\", \"embed\", \"figma\"];\n\nconst Asset: React.FC<{\n  block: BlockType;\n  mapImageUrl: MapImageUrl;\n}> = ({ block, mapImageUrl }) => {\n  const value = block.value as ContentValueType;\n  const type = block.value.type;\n\n  if (!types.includes(type)) {\n    return null;\n  }\n\n  const format = value.format;\n  const {\n    display_source = undefined,\n    block_aspect_ratio = undefined,\n    block_height = 1,\n    block_width = 1\n  } = format ?? {};\n\n  const aspectRatio = block_aspect_ratio || block_height / block_width;\n\n  if (type === \"embed\" || type === \"video\" || type === \"figma\") {\n    return (\n      <div\n        style={{\n          paddingBottom: `${aspectRatio * 100}%`,\n          position: \"relative\"\n        }}\n      >\n        <iframe\n          className=\"notion-image-inset\"\n          src={type === \"figma\" ? value.properties.source[0][0] : display_source}\n        />\n      </div>\n    );\n  }\n\n  if (block.value.type === \"image\") {\n    const src = mapImageUrl(value.properties.source[0][0], block);\n    const caption = value.properties.caption?.[0][0];\n\n    if (block_aspect_ratio) {\n      return (\n        <div\n          style={{\n            paddingBottom: `${aspectRatio * 100}%`,\n            position: \"relative\"\n          }}\n        >\n          <img\n            className=\"notion-image-inset\"\n            alt={caption || \"notion image\"}\n            src={src}\n          />\n        </div>\n      );\n    } else {\n      return <img alt={caption} src={src} />;\n    }\n  }\n\n  return null;\n};\n\nexport default Asset;\n","import * as React from \"react\";\nimport { highlight, languages } from \"prismjs\";\nimport \"prismjs/components/prism-jsx\";\n\nconst Code: React.FC<{ code: string; language: string }> = ({\n  code,\n  language = \"javascript\"\n}) => {\n  const languageL = language.toLowerCase();\n  const prismLanguage = languages[languageL] || languages.javascript;\n\n  const langClass = `language-${language.toLowerCase()}`;\n\n  return (\n    <pre className={`notion-code ${langClass}`}>\n      <code\n        className={langClass}\n        dangerouslySetInnerHTML={{\n          __html: highlight(code, prismLanguage, language)\n        }}\n      />\n    </pre>\n  );\n};\n\nexport default Code;\n","import { DecorationType, BlockMapType, MapImageUrl } from \"./types\";\n\nexport const classNames = (...classes: Array<string | undefined | false>) =>\n  classes.filter(a => !!a).join(\" \");\n\nexport const getTextContent = (text: DecorationType[]) => {\n  return text.reduce((prev, current) => prev + current[0], \"\");\n};\n\nconst groupBlockContent = (blockMap: BlockMapType): string[][] => {\n  const output: string[][] = [];\n\n  let lastType: string | undefined = undefined;\n  let index = -1;\n\n  Object.keys(blockMap).forEach(id => {\n    blockMap[id].value.content?.forEach(blockId => {\n      const blockType = blockMap[blockId]?.value?.type;\n\n      if (blockType && blockType !== lastType) {\n        index++;\n        lastType = blockType;\n        output[index] = [];\n      }\n\n      output[index].push(blockId);\n    });\n\n    lastType = undefined;\n  });\n\n  return output;\n};\n\nexport const getListNumber = (blockId: string, blockMap: BlockMapType) => {\n  const groups = groupBlockContent(blockMap);\n  const group = groups.find(g => g.includes(blockId));\n\n  if (!group) {\n    return;\n  }\n\n  return group.indexOf(blockId) + 1;\n};\n\nexport const defaultMapImageUrl: MapImageUrl = (image = \"\", block) => {\n  const url = new URL(\n    `https://www.notion.so${\n      image.startsWith(\"/image\") ? image : `/image/${encodeURIComponent(image)}`\n    }`\n  );\n\n  if (block) {\n    const table =\n      block.value.parent_table === \"space\" ? \"block\" : block.value.parent_table;\n    url.searchParams.set(\"table\", table);\n    url.searchParams.set(\"id\", block.value.id);\n    url.searchParams.set(\"cache\", \"v2\");\n  }\n\n  return url.toString();\n};\n\nexport const defaultMapPageUrl = (pageId: string = \"\") => {\n  pageId = pageId.replace(/-/g, \"\");\n\n  return `/${pageId}`;\n};\n","import * as React from \"react\";\nimport {\n  BlockType,\n  PageValueType,\n  BlockValueType,\n  CalloutValueType,\n  MapImageUrl\n} from \"../types\";\nimport { getTextContent, classNames } from \"../utils\";\n\nconst isIconBlock = (\n  value: BlockValueType\n): value is PageValueType | CalloutValueType => {\n  return value.type === \"page\" || value.type === \"callout\";\n};\n\ninterface AssetProps {\n  block: BlockType;\n  mapImageUrl: MapImageUrl;\n  big?: boolean;\n  className?: string;\n}\n\nconst PageIcon: React.FC<AssetProps> = ({\n  block,\n  className,\n  big,\n  mapImageUrl\n}) => {\n  if (!isIconBlock(block.value)) {\n    return null;\n  }\n  const icon = block.value.format?.page_icon;\n  const title = block.value.properties?.title;\n\n  if (icon?.includes(\"http\")) {\n    const url = mapImageUrl(icon);\n\n    return (\n      <img\n        className={classNames(\n          className,\n          big ? \"notion-page-icon-cover\" : \"notion-page-icon\"\n        )}\n        src={url}\n        alt={title ? getTextContent(title) : \"Icon\"}\n      />\n    );\n  } else {\n    return (\n      <span\n        className={classNames(\n          className,\n          big ? \"notion-page-icon-cover\" : \"notion-page-icon\"\n        )}\n        role=\"img\"\n        aria-label={icon}\n      >\n        {icon}\n      </span>\n    );\n  }\n};\n\nexport default PageIcon;\n","import * as React from \"react\";\n\nimport { BlockMapType, MapPageUrl, MapImageUrl } from \"../types\";\nimport PageIcon from \"./page-icon\";\n\ninterface PageHeaderProps {\n  blockMap: BlockMapType;\n  mapPageUrl: MapPageUrl;\n  mapImageUrl: MapImageUrl;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({\n  blockMap,\n  mapPageUrl,\n  mapImageUrl\n}) => {\n  const blockIds = Object.keys(blockMap);\n  const activePageId = blockIds[0];\n\n  if (!activePageId) {\n    return null;\n  }\n\n  const breadcrumbs = [];\n  let currentPageId = activePageId;\n\n  do {\n    const block = blockMap[currentPageId];\n    if (!block || !block.value) {\n      break;\n    }\n\n    const title = block.value.properties?.title[0][0];\n    const icon = (block.value as any).format?.page_icon;\n\n    if (!(title || icon)) {\n      break;\n    }\n\n    breadcrumbs.push({\n      block,\n      active: currentPageId === activePageId,\n      pageId: currentPageId,\n      title,\n      icon\n    });\n\n    const parentId = block.value.parent_id;\n\n    if (!parentId) {\n      break;\n    }\n\n    currentPageId = parentId;\n  } while (true);\n\n  breadcrumbs.reverse();\n\n  return (\n    <header className=\"notion-page-header\">\n      <div className=\"notion-nav-header\">\n        <div className=\"notion-nav-breadcrumbs\">\n          {breadcrumbs.map((breadcrumb, index) => (\n            <React.Fragment key={breadcrumb.pageId}>\n              <a\n                className={`notion-nav-breadcrumb ${\n                  breadcrumb.active ? \"notion-nav-breadcrumb-active\" : \"\"\n                }`}\n                href={\n                  breadcrumb.active ? undefined : mapPageUrl(breadcrumb.pageId)\n                }\n              >\n                {breadcrumb.icon && (\n                  <PageIcon\n                    className=\"notion-nav-icon\"\n                    block={breadcrumb.block}\n                    mapImageUrl={mapImageUrl}\n                  />\n                )}\n\n                {breadcrumb.title && (\n                  <span className=\"notion-nav-title\">{breadcrumb.title}</span>\n                )}\n              </a>\n\n              {index < breadcrumbs.length - 1 && (\n                <span className=\"notion-nav-spacer\">/</span>\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default PageHeader;\n","import * as React from \"react\";\nimport {\n  DecorationType,\n  BlockType,\n  ContentValueType,\n  BlockMapType,\n  MapPageUrl,\n  MapImageUrl\n} from \"./types\";\nimport Asset from \"./components/asset\";\nimport Code from \"./components/code\";\nimport PageIcon from \"./components/page-icon\";\nimport PageHeader from \"./components/page-header\";\nimport { classNames, getTextContent, getListNumber } from \"./utils\";\n\nexport const renderChildText = (properties: DecorationType[]) => {\n  return properties?.map(([text, decorations], i) => {\n    if (!decorations) {\n      return <React.Fragment key={i}>{text}</React.Fragment>;\n    }\n\n    return decorations.reduceRight((element, decorator) => {\n      switch (decorator[0]) {\n        case \"h\":\n          return (\n            <span key={i} className={`notion-${decorator[1]}`}>\n              {element}\n            </span>\n          );\n        case \"c\":\n          return (\n            <code key={i} className=\"notion-inline-code\">\n              {element}\n            </code>\n          );\n        case \"b\":\n          return <b key={i}>{element}</b>;\n        case \"i\":\n          return <em key={i}>{element}</em>;\n        case \"s\":\n          return <s key={i}>{element}</s>;\n        case \"a\":\n          return (\n            <a className=\"notion-link\" href={decorator[1]} key={i}>\n              {element}\n            </a>\n          );\n\n        default:\n          return <React.Fragment key={i}>{element}</React.Fragment>;\n      }\n    }, <>{text}</>);\n  });\n};\n\ninterface Block {\n  block: BlockType;\n  level: number;\n  blockMap: BlockMapType;\n  mapPageUrl: MapPageUrl;\n  mapImageUrl: MapImageUrl;\n\n  fullPage?: boolean;\n  hideHeader?: boolean;\n}\n\nexport const Block: React.FC<Block> = props => {\n  const {\n    block,\n    children,\n    level,\n    fullPage,\n    hideHeader,\n    blockMap,\n    mapPageUrl,\n    mapImageUrl\n  } = props;\n  const blockValue = block?.value;\n\n  switch (blockValue?.type) {\n    case \"page\":\n      if (level === 0) {\n        if (fullPage) {\n          if (!blockValue.properties) {\n            return null;\n          }\n\n          const {\n            page_icon,\n            page_cover,\n            page_cover_position,\n            page_full_width,\n            page_small_text\n          } = blockValue.format || {};\n\n          const coverPosition = (1 - (page_cover_position || 0.5)) * 100;\n\n          return (\n            <div className=\"notion notion-app\">\n              <div className=\"notion-cursor-listener\">\n                <div className=\"notion-frame\">\n                  {!hideHeader && (\n                    <PageHeader\n                      blockMap={blockMap}\n                      mapPageUrl={mapPageUrl}\n                      mapImageUrl={mapImageUrl}\n                    />\n                  )}\n\n                  <div className=\"notion-scroller\">\n                    {page_cover && (\n                      <img\n                        src={mapImageUrl(page_cover)}\n                        alt={getTextContent(blockValue.properties.title)}\n                        className=\"notion-page-cover\"\n                        style={{\n                          objectPosition: `center ${coverPosition}%`\n                        }}\n                      />\n                    )}\n                    <main\n                      className={classNames(\n                        \"notion-page\",\n                        !page_cover && \"notion-page-offset\",\n                        page_full_width && \"notion-full-width\",\n                        page_small_text && \"notion-small-text\"\n                      )}\n                    >\n                      {page_icon && (\n                        <PageIcon\n                          className={\n                            page_cover ? \"notion-page-icon-offset\" : undefined\n                          }\n                          block={block}\n                          big\n                          mapImageUrl={mapImageUrl}\n                        />\n                      )}\n\n                      <div className=\"notion-title\">\n                        {renderChildText(blockValue.properties.title)}\n                      </div>\n\n                      {children}\n                    </main>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        } else {\n          return <main className=\"notion\">{children}</main>;\n        }\n      } else {\n        if (!blockValue.properties) return null;\n        return (\n          <a className=\"notion-page-link\" href={mapPageUrl(blockValue.id)}>\n            {blockValue.format && (\n              <div className=\"notion-page-icon\">\n                <PageIcon block={block} mapImageUrl={mapImageUrl} />\n              </div>\n            )}\n            <div className=\"notion-page-text\">\n              {renderChildText(blockValue.properties.title)}\n            </div>\n          </a>\n        );\n      }\n    case \"header\":\n      if (!blockValue.properties) return null;\n      return (\n        <h1 className=\"notion-h1\">\n          {renderChildText(blockValue.properties.title)}\n        </h1>\n      );\n    case \"sub_header\":\n      if (!blockValue.properties) return null;\n      return (\n        <h2 className=\"notion-h2\">\n          {renderChildText(blockValue.properties.title)}\n        </h2>\n      );\n    case \"sub_sub_header\":\n      if (!blockValue.properties) return null;\n      return (\n        <h3 className=\"notion-h3\">\n          {renderChildText(blockValue.properties.title)}\n        </h3>\n      );\n    case \"divider\":\n      return <hr className=\"notion-hr\" />;\n    case \"text\":\n      if (!blockValue.properties) {\n        return <div className=\"notion-blank\">&nbsp;</div>;\n      }\n      const blockColor = blockValue.format?.block_color;\n      return (\n        <p\n          className={classNames(\n            `notion-text`,\n            blockColor && `notion-${blockColor}`\n          )}\n        >\n          {renderChildText(blockValue.properties.title)}\n        </p>\n      );\n    case \"bulleted_list\":\n    case \"numbered_list\":\n      const wrapList = (content: React.ReactNode, start?: number) =>\n        blockValue.type === \"bulleted_list\" ? (\n          <ul className=\"notion-list notion-list-disc\">{content}</ul>\n        ) : (\n          <ol start={start} className=\"notion-list notion-list-numbered\">\n            {content}\n          </ol>\n        );\n\n      let output: JSX.Element | null = null;\n\n      if (blockValue.content) {\n        output = (\n          <>\n            {blockValue.properties && (\n              <li>{renderChildText(blockValue.properties.title)}</li>\n            )}\n            {wrapList(children)}\n          </>\n        );\n      } else {\n        output = blockValue.properties ? (\n          <li>{renderChildText(blockValue.properties.title)}</li>\n        ) : null;\n      }\n\n      const isTopLevel =\n        block.value.type !== blockMap[block.value.parent_id].value.type;\n      const start = getListNumber(blockValue.id, blockMap);\n\n      return isTopLevel ? wrapList(output, start) : output;\n\n    case \"image\":\n    case \"embed\":\n    case \"figma\":\n    case \"video\":\n      const value = block.value as ContentValueType;\n\n      return (\n        <figure\n          className=\"notion-asset-wrapper\"\n          style={\n            value.format !== undefined\n              ? { width: value.format.block_width }\n              : undefined\n          }\n        >\n          <Asset block={block} mapImageUrl={mapImageUrl} />\n\n          {value.properties.caption && (\n            <figcaption className=\"notion-image-caption\">\n              {renderChildText(value.properties.caption)}\n            </figcaption>\n          )}\n        </figure>\n      );\n    case \"code\": {\n      if (blockValue.properties.title) {\n        const content = blockValue.properties.title[0][0];\n        const language = blockValue.properties.language[0][0];\n        return (\n          <Code key={blockValue.id} language={language || \"\"} code={content} />\n        );\n      }\n      break;\n    }\n    case \"column_list\":\n      return <div className=\"notion-row\">{children}</div>;\n    case \"column\":\n      const spacerWith = 46;\n      const ratio = blockValue.format.column_ratio;\n      const columns = Number((1 / ratio).toFixed(0));\n      const spacerTotalWith = (columns - 1) * spacerWith;\n      const width = `calc((100% - ${spacerTotalWith}px) * ${ratio})`;\n      return (\n        <>\n          <div className=\"notion-column\" style={{ width }}>\n            {children}\n          </div>\n          <div className=\"notion-spacer\" style={{ width: spacerWith }} />\n        </>\n      );\n    case \"quote\":\n      if (!blockValue.properties) return null;\n      return (\n        <blockquote className=\"notion-quote\">\n          {renderChildText(blockValue.properties.title)}\n        </blockquote>\n      );\n    case \"collection_view\":\n      if (!block) return null;\n\n      const collectionView = block?.collection?.types[0];\n\n      return (\n        <div>\n          <h3 className=\"notion-h3\">\n            {renderChildText(block.collection?.title!)}\n          </h3>\n\n          {collectionView?.type === \"table\" && (\n            <div style={{ maxWidth: \"100%\", marginTop: 5 }}>\n              <table className=\"notion-table\">\n                <thead>\n                  <tr className=\"notion-tr\">\n                    {collectionView.format?.table_properties\n                      ?.filter(p => p.visible)\n                      .map((gp, index) => (\n                        <th\n                          className=\"notion-th\"\n                          key={index}\n                          style={{ minWidth: gp.width }}\n                        >\n                          {block.collection?.schema[gp.property]?.name}\n                        </th>\n                      ))}\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {block?.collection?.data.map((row, index) => (\n                    <tr className=\"notion-tr\" key={index}>\n                      {collectionView.format?.table_properties\n                        ?.filter(p => p.visible)\n                        .map((gp, index) => (\n                          <td\n                            key={index}\n                            className={\n                              \"notion-td \" +\n                              (gp.property === \"title\" ? \"notion-bold\" : \"\")\n                            }\n                          >\n                            {\n                              renderChildText(\n                                row[\n                                  block.collection?.schema[gp.property]?.name!\n                                ]\n                              )!\n                            }\n                          </td>\n                        ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {collectionView?.type === \"gallery\" && (\n            <div className=\"notion-gallery\">\n              {block.collection?.data.map((row, i) => (\n                <div key={`col-${i}`} className=\"notion-gallery-card\">\n                  <div className=\"notion-gallery-content\">\n                    {collectionView.format?.gallery_properties\n                      ?.filter(p => p.visible)\n                      .map((gp, idx) => (\n                        <p\n                          key={idx + \"item\"}\n                          className={\n                            \"notion-gallery-data \" +\n                            (idx === 0 ? \"is-first\" : \"\")\n                          }\n                        >\n                          {getTextContent(\n                            row[block.collection?.schema[gp.property].name!]\n                          )}\n                        </p>\n                      ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      );\n    case \"callout\":\n      return (\n        <div\n          className={classNames(\n            \"notion-callout\",\n            blockValue.format.block_color &&\n              `notion-${blockValue.format.block_color}_co`\n          )}\n        >\n          <div>\n            <PageIcon block={block} mapImageUrl={mapImageUrl} />\n          </div>\n          <div className=\"notion-callout-text\">\n            {renderChildText(blockValue.properties.title)}\n          </div>\n        </div>\n      );\n    case \"bookmark\":\n      const link = blockValue.properties.link;\n      const title = blockValue.properties.title ?? link;\n      const description = blockValue.properties.description;\n      const block_color = blockValue.format?.block_color;\n      const bookmark_icon = blockValue.format?.bookmark_icon;\n      const bookmark_cover = blockValue.format?.bookmark_cover;\n\n      return (\n        <div className=\"notion-row\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={classNames(\n              \"notion-bookmark\",\n              block_color && `notion-${block_color}`\n            )}\n            href={link[0][0]}\n          >\n            <div>\n              <div className=\"notion-bookmark-title\">\n                {renderChildText(title)}\n              </div>\n              {description && (\n                <div className=\"notion-bookmark-description\">\n                  {renderChildText(description)}\n                </div>\n              )}\n\n              <div className=\"notion-bookmark-link\">\n                {bookmark_icon && (\n                  <img src={bookmark_icon} alt={getTextContent(title)} />\n                )}\n                <div>{renderChildText(link)}</div>\n              </div>\n            </div>\n            {bookmark_cover && (\n              <div className=\"notion-bookmark-image\">\n                <img src={bookmark_cover} alt={getTextContent(title)} />\n              </div>\n            )}\n          </a>\n        </div>\n      );\n    case \"toggle\":\n      return (\n        <details className=\"notion-toggle\">\n          <summary>{renderChildText(blockValue.properties.title)}</summary>\n          <div>{children}</div>\n        </details>\n      );\n    default:\n      if (process.env.NODE_ENV !== \"production\") {\n        console.log(\"Unsupported type \" + block?.value?.type);\n      }\n      return <div />;\n  }\n  return null;\n};\n","import React from \"react\";\nimport { BlockMapType, MapPageUrl, MapImageUrl } from \"./types\";\nimport { Block } from \"./block\";\nimport { defaultMapImageUrl, defaultMapPageUrl } from \"./utils\";\n\nexport interface NotionRendererProps {\n  blockMap: BlockMapType;\n  fullPage?: boolean;\n  hideHeader?: boolean;\n  mapPageUrl?: MapPageUrl;\n  mapImageUrl?: MapImageUrl;\n\n  currentId?: string;\n  level?: number;\n}\n\nexport const NotionRenderer: React.FC<NotionRendererProps> = ({\n  level = 0,\n  currentId,\n  mapPageUrl = defaultMapPageUrl,\n  mapImageUrl = defaultMapImageUrl,\n  ...props\n}) => {\n  const { blockMap } = props;\n  const id = currentId || Object.keys(blockMap)[0];\n  const currentBlock = blockMap[id];\n\n  if (!currentBlock) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn(\"error rendering block\", currentId);\n    }\n    return null;\n  }\n\n  return (\n    <Block\n      key={id}\n      level={level}\n      block={currentBlock}\n      mapPageUrl={mapPageUrl}\n      mapImageUrl={mapImageUrl}\n      {...props}\n    >\n      {currentBlock?.value?.content?.map(contentId => (\n        <NotionRenderer\n          key={contentId}\n          currentId={contentId}\n          level={level + 1}\n          mapPageUrl={mapPageUrl}\n          mapImageUrl={mapImageUrl}\n          {...props}\n        />\n      ))}\n    </Block>\n  );\n};\n"],"names":["types","Asset","block","mapImageUrl","value","type","includes","format","display_source","undefined","block_aspect_ratio","block_height","block_width","aspectRatio","React","style","paddingBottom","position","className","src","properties","source","caption","alt","Code","code","language","languageL","toLowerCase","prismLanguage","languages","javascript","langClass","dangerouslySetInnerHTML","__html","highlight","classNames","classes","filter","a","join","getTextContent","text","reduce","prev","current","groupBlockContent","blockMap","output","lastType","index","Object","keys","forEach","id","content","blockId","blockType","push","getListNumber","groups","group","find","g","indexOf","defaultMapImageUrl","image","url","URL","startsWith","encodeURIComponent","table","parent_table","searchParams","set","toString","defaultMapPageUrl","pageId","replace","isIconBlock","PageIcon","big","icon","page_icon","title","role","PageHeader","mapPageUrl","blockIds","activePageId","breadcrumbs","currentPageId","active","parentId","parent_id","reverse","map","breadcrumb","key","href","length","renderChildText","i","decorations","reduceRight","element","decorator","Block","props","children","level","fullPage","hideHeader","blockValue","page_cover","page_cover_position","page_full_width","page_small_text","coverPosition","objectPosition","blockColor","block_color","wrapList","start","isTopLevel","width","spacerWith","ratio","column_ratio","columns","Number","toFixed","spacerTotalWith","collectionView","collection","maxWidth","marginTop","table_properties","p","visible","gp","minWidth","schema","property","name","data","row","gallery_properties","idx","link","description","bookmark_icon","bookmark_cover","target","rel","console","log","NotionRenderer","currentId","currentBlock","warn","contentId"],"mappings":"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"}