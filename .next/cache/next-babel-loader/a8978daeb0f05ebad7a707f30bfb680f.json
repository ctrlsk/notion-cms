{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/shashankkumar/Documents/blog/notion-cms/pages/blog/[slug].tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { NotionRenderer } from \"react-notion\";\n\nvar BlogPost = function BlogPost(_ref) {\n  var post = _ref.post,\n      blocks = _ref.blocks;\n  if (!post) return null;\n  return __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, post.title), __jsx(NotionRenderer, {\n    blockMap: blocks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = BlogPost;\nexport var __N_SSG = true;\nexport default BlogPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"sources":["/Users/shashankkumar/Documents/blog/notion-cms/pages/blog/[slug].tsx"],"names":["React","NotionRenderer","BlogPost","post","blocks","title"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA6C,cAA7C;;AA2BA,IAAMC,QAAwD,GAAG,SAA3DA,QAA2D,OAG3D;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ,MAAI,CAACD,IAAL,EAAW,OAAO,IAAP;AAEX,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACE,KAAV,CADF,EAEE,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAED,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAZD;;KAAMF,Q;;AAsBN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { NotionRenderer, BlockMapType } from \"react-notion\";\n\nimport { getAllPosts, Post } from \"../\";\n\nexport async function getStaticProps({\n  params: { slug },\n}: {\n  params: { slug: string };\n}) {\n  // Get all posts again\n  const posts = await getAllPosts();\n\n  // Find the current blogpost by slug\n  const post = posts.find((t) => t.slug === slug);\n\n  const blocks = await fetch(\n    `https://notion-api.splitbee.io/v1/page/${post!.id}`\n  ).then((res) => res.json());\n\n  return {\n    props: {\n      blocks,\n      post,\n    },\n  };\n}\n\nconst BlogPost: React.FC<{ post: Post; blocks: BlockMapType }> = ({\n  post,\n  blocks,\n}) => {\n  if (!post) return null;\n\n  return (\n    <div className=\"content\">\n      <h1>{post.title}</h1>\n      <NotionRenderer blockMap={blocks} />\n    </div>\n  );\n};\n\nexport async function getStaticPaths() {\n  const table = await getAllPosts();\n  return {\n    paths: table.map((row) => `/blog/${row.slug}`),\n    fallback: true,\n  };\n}\n\nexport default BlogPost;\n"]},"metadata":{},"sourceType":"module"}